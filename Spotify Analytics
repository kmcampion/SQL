--For this project, I downloaded Spotify data from Kaggle.
--Then, I created a table to insert Spotify data into.
--Finally, I performed analytics on the data using SQL. 

--Creating table:
CREATE TABLE BIT_DB.SpotifyData (
id INTEGER PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL );

--Then, I inserted the Spotify Data .csv  into the table.

--Next, I explored the data using the following SQL.


--What is the average danceability by artist and track?

SELECT artist_name, track_name, AVG(danceability)
FROM BIT_DB.SpotifyData
GROUP BY artist_name, track_name;

--Who are the top 10 most popular artists?
SELECT artist_name, popularity
FROM BIT_DB.SpotifyData
ORDER BY popularity DESC
LIMIT 10;

--What artist released the longest song?
SELECT artist_name, duration_ms
FROM BIT_DB.SpotifyData
ORDER BY duration_ms DESC
LIMIT 1;

--What is the name and speechiness of the 5 most popular songs?
SELECT track_name, speechiness
FROM BIT_DB.SpotifyData
ORDER BY popularity DESC
LIMIT 5;

--Which song has the least energy?
SELECT track_name, energy
FROM BIT_DB.SpotifyData
ORDER BY energy ASC
LIMIT 1;
